# 线程池
task:
  pool:
    # 核心线程池大小
    corePoolSize: 100
    # 最大线程数
    maxPoolSize:  300
    # 队列容量
    keepAliveSeconds: 500
    # 活跃时间
    queueCapacity:  50

http-client:
  #连接池的最大连接数，0代表不限；如果取0，需要考虑连接泄露导致系统崩溃的后果
  maxTotalConnect: 1000
  #每个路由的最大连接数,如果只调用一个地址,可以将其设置为最大连接数
  maxConnectPerRoute: 200
  # 指客户端和服务器建立连接的超时时间,ms , 最大约21秒,因为内部tcp在进行三次握手建立连接时,默认tcp超时时间是20秒
  connectTimeout: 3000
  # 指客户端从服务器读取数据包的间隔超时时间,不是总读取时间,也就是socket timeout,ms
  readTimeout: 5000
  # 从连接池获取连接的timeout,不宜过大,ms
  connectionRequestTimout: 200
  # 重试次数
  retryTimes: 3
  charset: UTF-8
  # 长连接保持时间 单位s,不宜过长
  keepAliveTime: 10
  # 针对不同的网址,长连接保持的存活时间,单位s,如果是频繁而持续的请求,可以设置小一点,不建议设置过大,避免大量无用连接占用内存资源
#  keepAliveTargetHost:
#    www.baidu.com: 5

management:
  endpoints:
    web:
      exposure:
        #开放所有页面节点  默认只开启了health、info两个节点
        include: '*'
  endpoint:
    health:
      #显示健康具体信息  默认不会显示详细信息
      show-details: always



# mybatis-plus 配置
mybatis-plus:
  global-config:
    db-config:
      # 主键ID 生成策略
      id-type: assign_id
      # 表名前缀
      table-prefix: xdc_t_
  configuration:
    # 是否开启自动驼峰命名规则（camel case）映射
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:/mappers/**/*.xml

# 分页
pagehelper:
  helper-dialect: mysql
  params: count=countSql
  reasonable: true
  support-methods-arguments: true

logging:
  config: classpath:logback-${spring.profiles.active}.xml
  level:
    com.alibaba.nacos.client.naming: error

spring:
  servlet:
    multipart:
      enabled: true
      location: /data/tmp
      file-size-threshold: 20MB
      max-file-size: 1024MB
      max-request-size: 1024MB

  # mysql 配置
  datasource:
    # 数据源/连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    sql-script-encoding: utf-8
    # 数据库驱动名称
    driver-class-name: com.mysql.jdbc.Driver
    initialization-mode: always
    druid:
      # 定义初始连接数
      initialSize: 1
      # 定义最小空闲 minIdle=1
      minIdle: 3
      # 定义最大连接数
      maxActive: 100
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      # 验证使用的SQL语句
      validationQuery: select 'x'
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
      testWhileIdle: true
      # 借出连接时不要测试，否则很影响性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      # 指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      db-type: mysql

  # redis 缓存配置
  cache:
    redis:
      time-to-live: 60s
    type: redis
  redis:
    timeout: 10000ms
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 5
        max-wait: 10000ms

#feign配置
feign:
  sentinel:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
































